<?xml version="1.0" encoding="UTF-8"?>
<root xmlns:nsd="https://structorizer.fisch.lu" version="3.32-26" preRepeat="until " postFor="to" preReturn="return" postForIn="in" preWhile="while " output="OUTPUT" input="INPUT" preFor="for" preExit="exit" preLeave="leave" ignoreCase="true" preThrow="throw" preForIn="foreach" stepFor="by" namespace="" author="csabasoos" created="2025-03-10" changedby="csabasoos" changed="2025-03-10" origin="Structorizer 3.32-26" text="&#34;C2L_Intersection(L1:C2L, L2:C2L):C2L&#34;" comment="&#34;&#34;" color="ffffff" type="program" style="nice">
	<children>
		<alternative text="&#34;L1 = 0 or L2 = 0&#34;" comment="&#34;&#34;" color="ffffff" disabled="0">
			<qTrue>
				<instruction text="&#34;return 0&#34;" comment="&#34;&#34;" color="ffffff" rotated="0" disabled="0"></instruction>
			</qTrue>
			<qFalse color="ffffff">
			</qFalse>
		</alternative>
		<while text="&#34;read(x1, x2)&#34;" comment="&#34;&#34;" color="ffffff" disabled="0">
			<qWhile>
				<case text="&#34;???&#34;,&#34;x1 = x2&#34;,&#34;x1 &#60; x2&#34;,&#34;x1 &#62; x2&#34;,&#34;%&#34;" comment="&#34;&#34;" color="ffffff" disabled="0">
					<qCase>
						<instruction text="&#34;R.Add(x1)&#34;" comment="&#34;&#34;" color="ffffff" rotated="0" disabled="0"></instruction>
						<instruction text="&#34;C2L_Intersection(rest(L1), rest(L2))&#34;" comment="&#34;&#34;" color="ffffff" rotated="0" disabled="0"></instruction>
					</qCase>
					<qCase>
						<instruction text="&#34;C2L_Intersection(rest(L1), L2)&#34;" comment="&#34;&#34;" color="ffffff" rotated="0" disabled="0"></instruction>
					</qCase>
					<qCase>
						<instruction text="&#34;C2L_Intersection(L1, rest(L2))&#34;" comment="&#34;&#34;" color="ffffff" rotated="0" disabled="0"></instruction>
					</qCase>
					<qCase color="ffffff">
					</qCase>
				</case>
			</qWhile>
		</while>
	</children>
</root>