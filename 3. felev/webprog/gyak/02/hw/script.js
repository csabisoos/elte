// 1) Adatok â€” ezzel dolgozol
const books = [
  {
    id: 0,
    title: "SzÃ¡z Ã©v magÃ¡ny",
    author: "Gabriel GarcÃ­a MÃ¡rquez",
    year: 1967,
    read: true,
  },
  {
    id: 1,
    title: "Mellettem elfÃ©rsz",
    author: "GrecsÃ³ KrisztiÃ¡n",
    year: 2011,
    read: true,
  },
  {
    id: 2,
    title: "ApÃ¡n Ã¼zent",
    author: "GrecsÃ³ KrisztiÃ¡n",
    year: 2024,
    read: false,
  },
  {
    id: 3,
    title: "BÅ±n Ã©s bÅ±nhÅ‘dÃ©s",
    author: "Fjodor Mihajlovics Dosztojevszkij",
    year: 1866,
    read: true,
  },
  {
    id: 4,
    author: "Colleen McCullough",
    title: "TÃ¶vismadarak",
    year: 1977,
    read: false,
  },
];

let activeElemIndex = 0;

// == FELADATOK ==
// Feladat 1: JelenÃ­tsd meg a kÃ¶nyveket az oldalon!
// - vedd be JS-be a "book-grid" id-val ellÃ¡tott div elemet, ez lesz a szÃ¼lÅ‘ eleme a legenerÃ¡lt "article"-nek, ne felejtsd majd el hozzÃ¡fÅ±zni a vÃ©gÃ©n! (appendChild())
const BookGridDiv = document.querySelector('#book-grid');
// - menj vÃ©gig a tÃ¶mbÃ¶n, minden egyes kÃ¶nyvre hozz lÃ©tre egy "article" HTML elemet!
books.forEach((book) => {
    const article = document.createElement('article');
    // - add hozzÃ¡ az elemhez a "card book-card" stÃ­lusosztÃ¡lyokat (hasznÃ¡ld a className propertyt!)
    article.className = 'card book-card';
    // - minden elem esetÃ©n Ã¡llÃ­tsd be a data-id-t a az adott elem id-jÃ¡ra (hasznÃ¡ld a dataset propertyt!)
    article.dataset.id = book.id;
    // - az elem belsejÃ©ben talÃ¡lhatÃ³ HTML (innerHTML) az alÃ¡bbi legyen (ha nem "book" a ciklusvÃ¡ltozÃ³d, Ã©rtelemszerÅ±en mÃ³dosÃ­tsd):
    article.innerHTML = 
        `<div class="badge ${book.read ? 'read' : 'unread'}">${book.read ? 'Elolvasva' : 'VÃ¡rÃ³lista'}</div>
        <h3>${book.title}</h3>
        <div class="meta">
            <span>ğŸ‘¤ ${book.author}</span>
            <span>ğŸ“… ${book.year}</span>
            <span>ğŸ“– ${book.pages} oldal</span>
        </div>`;

    article.addEventListener('click', () => {
        activeElemIndex = book.id;
        showDetails();
    });
    
    BookGridDiv.appendChild(article);
});

/* `<div class="badge ${book.read ? 'read' : 'unread'}">${book.read ? 'Elolvasva' : 'VÃ¡rÃ³lista'}</div>
    <h3>${book.title}</h3>
    <div class="meta">
      <span>ğŸ‘¤ ${book.author}</span>
      <span>ğŸ“… ${book.year}</span>
      <span>ğŸ“– ${book.pages} oldal</span>
    </div>` */

// - minden elem "click" eventjÃ©hez adj hozzÃ¡ egy esemÃ©nykezelÅ‘t, ami az alÃ¡bbit csinÃ¡lja:
//    - legyen egy globÃ¡lis "activeElemIndex" vÃ¡ltozÃ³d, ennek kezdeti Ã©rtÃ©ke 0
//    - kattintÃ¡skor Ã¡llÃ­tsd be az Ã©rtÃ©kÃ©t a kattintott elem id-jÃ¡ra
//    - a showDetails() fÃ¼ggvÃ©nyt egÃ©szÃ­tsd ki a *****-ok kÃ¶zÃ¶tt, Ãºgy, hogy megkeresed az elsÅ‘ elemet a tÃ¶mbben, amelyiknek az id-ja megegyezik az eltÃ¡rolt activeElemIndex Ã©rtÃ©kkel. Legyen az Ã­gy lÃ©trehozott vÃ¡ltozÃ³ neve "book" (mivel utÃ¡na Ã­gy hasznÃ¡ljuk)!
//    - hÃ­vd meg a showDetails() fÃ¼ggvÃ©nyt az esemÃ©nykezelÅ‘ben, hogy az minden "click"-re lefusson

// **********************

// **********************

const details = document.querySelector("#details");
function showDetails() {
  // *********************
  const book = books.find(b => b.id == activeElemIndex);
  // *********************
  if (!book) return;
  details.innerHTML = `
    <h2>${book.title}</h2>
    <p><strong>SzerzÅ‘:</strong> ${book.author}</p>
    <p><strong>KiadÃ¡s Ã©ve:</strong> ${book.year}</p>
    <p><strong>OldalszÃ¡m:</strong> ${book.pages}</p>
    <p><strong>StÃ¡tusz:</strong> ${
      book.read ? "Elolvasva âœ…" : "VÃ¡rÃ³lista ğŸ“–"
    }</p>
  `;
}